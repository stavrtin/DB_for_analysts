Константин, добрый день.
Приходится ставить заглушку, не успеваю выполнить ДЗ. Смогу доделать только к 15.12.21
Если возможно - примите пока так. Или требуется в поддержке запрашивать продление срока?
Спасиобо.



Урок 3. Типовые методы анализа данных
ДЗ
В качестве ДЗ делам прогноз ТО на 05.2017. В качестве метода прогноза - считаем сколько денег тратят группы клиентов в день:
1. Группа часто покупающих (3 и более покупок) и которые последний раз покупали не так давно. Считаем сколько денег оформленного заказа приходится на 1 день. Умножаем на 30.
2. Группа часто покупающих, но которые не покупали уже значительное время. Так же можем сделать вывод, из такой группы за след месяц сколько купят и на какую сумму. (постараться продумать логику)
3. Отдельно разобрать пользователей с 1 и 2 покупками за все время, прогнозируем их.
4. В итоге у вас будет прогноз ТО и вы сможете его сравнить с фактом и оценить грубо разлет по данным.

Как источник данных используем данные по продажам за 2 года.


Select t.user_id -- , count(tt.id_o) as n
  From 
  (
SELECT user_id, min(o_date) as mind
  FROM public.orders_20190822
  GROUP BY user_id
  ) t
  join 
    (
SELECT user_id, o_date , id_o
  FROM public.orders_20190822
--  GROUP BY user_id
  ) tt
  ON t.user_id = tt.user_id
  Where t.mind = tt.o_date
  Group BY t.user_id
  Having count(tt.id_o)  > 1;


SELECT t.user_id, tt.sec_date - t.f_date, tt.sec_date, t.f_date
  From 
  (
SELECT user_id, min(o_date) as f_date
  FROM public.orders_20190822
  GROUP BY user_id
Having count(id_o) > 1
) t
  JOIN 
  (
SELECT user_id, min(o_date) as sec_date
  FROM public.orders_20190822
  where id_o not IN 
  (
SELECT min(id_o)
  FROM public.orders_20190822
  GROUP BY user_id  
  )
  GROUP BY user_id
  ) tt
  ON t.user_id = tt.user_id;


SELECT o_date, sum(price) as s
  FROM public.orders_20190822
where extract(year from o_date) = 2017 and extract(month from o_date) = 11
  Group by o_date;


SELECT *
  FROM public.orders_20190822;
-- РЎРµР·РѕРЅРЅРѕСЃС‚СЊ
-- РўСЂРµРЅРґ
-- РџРѕРєСѓРїР°С‚РµР»Рё + СЃРµРіРјРµРЅС‚Р°С†РёСЏ
-- РЎСЂ С‡РµРє ()
-- РџСЂРёС‚РѕРє РЅРѕРІС‹С…
-- Р”РѕР»СЏ РїРѕРІС‚РѕСЂРЅС‹С…


  Select t.yyyymm, count(t.user_id)
  From 
    (
SELECT user_id, extract(year from min(o_date))*100 + extract(month from min(o_date)) as yyyymm
  FROM public.orders_20190822
  Group by user_id
    ) t
    Group by t.yyyymm;


SELECT avg(t.avg_price)
  From 
  (
    SELECT user_id, sum(price)/count(id_o) as avg_price
  FROM public.orders_20190822
  Group by user_id
      Having min(o_date) > date('2016-04-01')
  ) t;

-- 2406
-- 2151
Select avg(price)
  From public.orders_20190822
  Where id_o not in 
  (
SELECT min(id_o) as mid
FROM public.orders_20190822 
  where user_id in 
(
    SELECT user_id
  FROM public.orders_20190822
  Group by user_id
      Having min(o_date) > date('2016-04-01')
  )
  GROUP by user_id
);